generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  conversations Conversation[] @relation("UserConversations")
  seenMessages  Message[]      @relation("SeenMessages")

  accounts Account[]
  messages Message[]
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Conversation {
  id            String   @id @default(uuid())
  createdAt     DateTime @default(now())
  lastMessageAt DateTime @default(now())
  name          String?
  isGroup       Boolean?

  messages Message[]

  users User[] @relation("UserConversations")
}

model Message {
  id        String   @id @default(uuid())
  body      String?
  image     String?
  createdAt DateTime @default(now())

  conversation   Conversation? @relation(fields: [conversationId], references: [id])
  conversationId String?

  senderId String
  sender   User   @relation(fields: [senderId], references: [id], onDelete: Cascade)

  seenByUsers User[] @relation("SeenMessages")
}
